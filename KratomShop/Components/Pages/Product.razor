@page "/product/{Id}"
<PageTitle>Produkt | Kratom E-shop</PageTitle>

@if(_item == null)
{
    <div class="text-center">
        <h2>Načítání produktu...</h2>
    </div>
}
else
{
    <RadzenRow>
        <h1 class="mb-4">@_item.Name</h1>
        <RadzenButton Icon="delete"
                      ButtonType="ButtonType.Button"
                      ButtonStyle="ButtonStyle.Danger"
                      Style="max-height: 10px;"
                      Click="RemoveItem" />
    </RadzenRow>
    

    <div class="row align-items-center mb-5">
        <div class="col-md-6 text-center">
            <img src="@_item.ImageUrl" alt="Kratom fotka" class="img-fluid rounded" style="max-width:300px;">
        </div>
        <div class="col-md-6">
            <h3>Popis produktu</h3>
            <p>
                @_item.Description
            </p>
            <div class="row mt-3">
                <div class="col">
                    <h4 class="text-success">Cena: @_item.PriceIncVat.ToString("F2") Kč</h4>
                </div>
                <div class="col text-end">
                    <button onclick="@(() => CartService.AddToCart(_item))" class="btn btn-dark">Přidat do košíku</button>
                </div>
            </div>
        </div>
    </div>

    <div class="mb-5">
        <h2>Recenze</h2>
        @if (_item.Reviews.Count != 0)
        {
            var averageRating = _item.Reviews.Average(r => r.Rating);
            var starCount = Math.Round(averageRating, 0, MidpointRounding.AwayFromZero);
            <p>
                Celkové hodnocení @starCount (
                @for (int i = 0; i < starCount; i++)
                {
                    <span>★</span>
                }
                @for (int i = (int)starCount; i < 5; i++)
                {
                    <span>☆</span>
                })
            </p>

        }

        <div class="list-group">

            @foreach (var review in _item.Reviews)
            {
                <div class="list-group-item">
                    <h5 class="mb-1">@review.User.FullName</h5>
                    <p class="mb-1">@review.Comment</p>
                    <div class="stars">

                        @for (int i = 0; i < review.Rating; i++)
                        {
                            <span>★</span>
                        }
                        @for (int i = review.Rating; i < 5; i++)
                        {
                            <span>☆</span>
                        }

                    </div>
                </div>
            }
            @if (_item.Reviews.Count == 0)
            {
                <p>Nebyly nalezeny žádné recenze</p>
            }
        </div>
    </div>
}




@code {
    [Parameter]
    public string Id { get; set; } = null!;

    [Inject]
    private ShopCatalogService _shopCatalogService { get; set; } = null!;
    [Inject]
    private DialogService _dialogService { get; set; } = null!;
    [Inject]
    private NotificationService _notificationService { get; set; } = null!;
    [Inject]
    private ILogger<Product> _logger { get; set; } = null!;
    [Inject]
    private NavigationManager _navigationManager { get; set; } = null!;
    [Inject]
    private CartService CartService { get; set; } = null!;

    private Item? _item;
    private Guid productId;

    protected override async Task OnInitializedAsync()
    {
        if (Guid.TryParse(Id, out productId))
        {
            _item = await _shopCatalogService.GetItemByIdAsync(productId);
        }
        else
        {
            _logger.LogError("Chyba při načítání produktu: {Id} není platný GUID", Id);
            _navigationManager.NavigateTo("/notfound");
        }
    }
    private async Task RemoveItem(MouseEventArgs args)
    {
        var result = await _dialogService.Confirm("Opravdu si přiejete smazání produktu?", "Smazání produktu");
        if (result.HasValue && result.Value)
        {
            await _shopCatalogService.RemoveItemAsync(productId);
            _navigationManager.NavigateTo("/products");
        }
    }
}
